{"version":3,"sources":["serviceWorker.js","public/js/Common.js","components/Isd.jsx","components/App.jsx","index.js"],"names":["Boolean","window","location","hostname","match","common","url","img_url","Common","net_url","TabPanel","props","value","index","children","role","hidden","id","aria-labelledby","Object","keys","map","item","key","RenderPicture","name","RenderText","RenderTabs","useState","tab","setTab","AppBar","position","color","Tabs","onChange","e","v","indicatorColor","textColor","variant","length","scrollButtons","Tab","label","values","style","margin","minHeight","RenderTable","tableData","StyledTableCell","withStyles","theme","head","backgroundColor","body","fontSize","TableCell","StyledTableRow","root","palette","action","hover","TableRow","display","width","textAlign","Typography","TableContainer","Table","minWidth","size","TableHead","title","align","TableBody","splice","rows","rowIndex","row","toString","alignItems","Array","cursor","src","alt","onClick","open","ele","withRouter","data","setData","res","useEffect","fetchIdMaps","hardId","history","pathname","split","Axios","method","Headers","then","console","log","code","note","content","JSON","parse","Paper","elevation","maxWidth","padding","JpackParse","Jpack","params","pack","push","hasOwnProperty","element","App","path","component","Isd","from","to","React","Component","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.67465305.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\r\nconst common = {}\r\n\r\ncommon.base_url = (url) => 'http://192.168.50.80:9001'+url;\r\ncommon.net_url = (url) => 'https://www.langjie.com'+url;\r\n\r\nexport default common","import React, { useEffect, useState } from 'react';\r\nimport { Paper, Typography, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, withStyles, AppBar, Tabs, Tab } from '@material-ui/core';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport Common from '../public/js/Common'\r\nimport { withRouter } from 'react-router-dom'\r\nimport Axios from 'axios';\r\nconst img_url = (url) => Common.net_url(`/img/gallery/`+url)\r\n\r\nfunction TabPanel (props) {\r\n    const { value, index, children } = props\r\n    return(\r\n        <div\r\n        role=\"tabpanel\"\r\n        hidden={value !== index}\r\n        id={`full-width-tabpanel-${index}`}\r\n        aria-labelledby={`full-width-tab-${index}`}\r\n        >\r\n        {value === index && Object.keys(children).map((item, index) => {\r\n            if(children[item]['class'] === 'picture'){\r\n                return (<div key={index+'tabPicture'}><RenderPicture name={item}>{children[item]}</RenderPicture></div>)\r\n            }else{\r\n                return(<div key={index+'text'}><RenderText name={item}>{children[item]}</RenderText></div>)\r\n            }\r\n        })}\r\n    </div>\r\n    )\r\n}\r\n\r\n/**\r\n * tabs组件\r\n */\r\n\r\nfunction RenderTabs(props){\r\n    const { children } = props\r\n    const [tab, setTab] = useState(0)\r\n    const handleChange = (e, v) => {\r\n        setTab(v)\r\n    }\r\n    return(\r\n        <div key=\"tabs\">\r\n            <AppBar position=\"static\" color=\"default\">\r\n                <Tabs\r\n                value={tab}\r\n                onChange={handleChange}\r\n                indicatorColor=\"primary\"\r\n                textColor=\"primary\"\r\n                variant={children.length >= 5 ? \"scrollable\" : \"fullWidth\"}\r\n                scrollButtons=\"on\"\r\n\r\n                >\r\n                    {children.map((tab, index) => (\r\n                        <Tab key={index+'tab'} label={Object.values(tab)[0]['title']}/>\r\n                    ))}\r\n                </Tabs>\r\n            </AppBar>\r\n            <SwipeableViews\r\n            index={tab}\r\n            >\r\n                {children.map((item, index) => (\r\n                    <div style={{margin: \"20px 10px\", minHeight:240}} key={index+\"tabPanel\"}><TabPanel value={tab} index={index}>{item}</TabPanel></div>\r\n                ))}\r\n            </SwipeableViews>\r\n        </div>\r\n    )\r\n}\r\n\r\n/**\r\n * Table组件\r\n */\r\n\r\nfunction RenderTable(props) {\r\n    const { name, children} = props\r\n    if(children['name'].length === 0) return\r\n    const tableData = children['name']\r\n    const StyledTableCell = withStyles((theme) => ({\r\n        head: {\r\n          backgroundColor: \"#3f51b5\",\r\n          color: \"#fff\",\r\n        },\r\n        body: {\r\n          fontSize: 12,\r\n        },\r\n      }))(TableCell);\r\n    \r\n      const StyledTableRow = withStyles((theme) => ({\r\n        root: {\r\n          '&:nth-of-type(odd)': {\r\n            backgroundColor: theme.palette.action.hover,\r\n          },\r\n        },\r\n      }))(TableRow);\r\n    return(\r\n        <div key=\"table\" style={{display: 'flex', margin: 10}} >\r\n           <div style={{width: \"25%\",textAlign: 'end'}}><Typography variant=\"subtitle2\">{name}：</Typography></div>\r\n            <div>\r\n                <TableContainer>\r\n                    <Table style={{minWidth: 400}} size=\"small\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                {tableData[0].map((title, index) => (\r\n                                    <StyledTableCell key={index+title} align=\"center\"><div>{title}</div></StyledTableCell>\r\n                                ))}\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {tableData.splice(1,tableData.length - 1).map((rows, rowIndex) => (\r\n                                <StyledTableRow key={rows}>{rows.map((row, index) =>(\r\n                                    <StyledTableCell key={row+index} align=\"center\">{row}</StyledTableCell>\r\n                                ))}</StyledTableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n/**\r\n * picture组件\r\n */\r\n\r\nfunction RenderPicture(props){\r\n    const { name, children } = props\r\n    return(\r\n        <div key={children['name'].toString()+ name} style={{display: 'flex', alignItems: 'center', margin: 10}}>\r\n            <div style={{width: \"25%\",textAlign: 'end'}}><Typography variant=\"subtitle2\">{name}：</Typography></div>\r\n            { children['name'] instanceof Array === true ? \r\n                children['name'].map((item, index) => (\r\n                    <div key={index+item}><img style={{cursor: 'pointer'}} src={img_url(item)} alt=\"\" width={children.width} onClick={() => window.open(img_url(item))}></img></div>\r\n                )) :\r\n                <div>\r\n                    <div><img style={{cursor: 'pointer'}} src={img_url(children['name'])} alt=\"\" width={children.width} onClick={() => window.open(img_url(children['name']))}></img></div>\r\n                    <div style={{textAlign:'center'}}><Typography variant=\"caption\">{children['title']}</Typography></div>\r\n                </div>\r\n            } \r\n        </div>\r\n    )\r\n}\r\n\r\n /**\r\n  *  text组件\r\n  */\r\n function RenderText(props){\r\n     const { name, children } = props\r\n    if(typeof children === 'string') {\r\n        return(\r\n            <div key={children+name} style={{display: 'flex', margin: 10}}>\r\n                <div style={{width: \"25%\",textAlign: 'end'}}><Typography variant=\"subtitle2\">{name}：</Typography></div>\r\n                <div><Typography variant=\"subtitle2\">{children}</Typography></div>\r\n            </div>\r\n        )\r\n    }else{\r\n        return(\r\n            <div key={children['name'].toString()+name} style={{display: 'flex', margin: 10}}>\r\n                <div style={{width: \"25%\",textAlign: 'end'}}><Typography variant=\"subtitle2\">{name}：</Typography></div>\r\n                <div style={{width: '75%'}} >{children['name'].map((ele, index) => (\r\n                    <Typography variant=\"subtitle2\" key={ele+index}>{index+1+\"、\"+ele}</Typography>\r\n                ))}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst Isd = props => {\r\n    const [data, setData] = useState({})\r\n    const res = []\r\n    useEffect(() => {\r\n        const fetchIdMaps = {\r\n            \"DBF25\": 114,\r\n            \"DBM25\": 115,\r\n            \"DBF9\": 112,\r\n            \"DBM9\": 113,\r\n            \"CX16-9\": 117,\r\n            \"Y21-5\": 116,\r\n            \"GX20-8\": 121,\r\n            \"GX16-7\": 120,\r\n            \"GX16-6\": 119,\r\n            \"GX16-4\": 118\r\n        }\r\n        const hardId = props.history.location.pathname.split('/')[props.history.location.pathname.split('/').length - 1]\r\n        const fetch = () => {\r\n            Axios({\r\n                method: \"GET\",\r\n                url: Common.net_url(`/open/knowledge/${fetchIdMaps[hardId]}`),\r\n                Headers: {\r\n                    'Content-Type':'application/json'\r\n                }\r\n            }).then(res => {\r\n                console.log(res)\r\n                if(res.data.code === 200) {\r\n                    let note = res.data.data[0].content['说明']\r\n                    note = typeof note === \"object\" ? note : JSON.parse(note)\r\n                    setData(note)\r\n                }else{\r\n                    console.log(111)\r\n                }\r\n            })\r\n        }\r\n\r\n        fetch()\r\n        \r\n    }, [props.history.location.pathname])\r\n    //解析json\r\n    function JpackParse(Jpack, params){\r\n        if(Jpack instanceof Array) {\r\n            Jpack.map((pack, index) => {\r\n                if(pack instanceof Array) {\r\n                    res.push(<RenderTabs key={index+\"pack\"}>{pack}</RenderTabs>)\r\n                }else{\r\n                    JpackParse(pack)\r\n                }\r\n            })\r\n        }else{\r\n            for (const key in Jpack) {\r\n                if(key !== 'class') {\r\n                    if (Jpack.hasOwnProperty(key)) {\r\n                        const element = Jpack[key];\r\n                        if(element instanceof Object) {\r\n                            if(element['class'] === 'picture') {\r\n                                res.push(<RenderPicture key={key} name={key}>{element}</RenderPicture>)\r\n                            }else if(element['class'] === 'table') {\r\n                                res.push(<RenderTable key={key} name={key}>{element}</RenderTable>)\r\n                            }else if(element['class'] === 'text'){\r\n                                res.push(<RenderText key={key} name={key}>{element}</RenderText>)\r\n                            }else{\r\n                                JpackParse(element, key)\r\n                            }\r\n                        }else{\r\n                            res.push(<RenderText key={key} name={key}>{element}</RenderText>)\r\n                        }\r\n                    }\r\n                }\r\n                \r\n            }\r\n        }\r\n        return res\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <Paper elevation={3} style={{width: \"100%\", maxWidth: 800, margin: 'auto', padding: \"20px 10px\"}}>\r\n                <div>{JpackParse(data)}</div>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Isd)","import React from 'react';\r\nimport { Route, Switch, Redirect, HashRouter } from 'react-router-dom';\r\nimport Isd from './Isd';\r\n\r\n\r\n\r\nexport default class App extends React.Component {\r\n\r\n    render () {\r\n        return (\r\n            <Switch>\r\n                <Route path=\"/*\" component={Isd} />\r\n                <Redirect from=\"/\" to=\"/\" />\r\n            </Switch>\r\n        )\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom'\nimport * as serviceWorker from './serviceWorker';\nimport './public/css/App.css';\nimport './public/css/Layout.css';\nimport App from './components/App';\nReactDOM.render(\n    <HashRouter>\n        <App/>\n    </HashRouter>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}